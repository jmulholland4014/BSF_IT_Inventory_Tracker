import java.util.HashMap;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author jmulh
 */
public class supply extends javax.swing.JFrame {
    Backend backend = new Backend();
    String supplyID = "";
    /**
     * Creates new form supply
     */
    public supply(String sID) {
        supplyID = sID;
        HashMap<String, String> deviceHashMap = backend.getDeviceInformation(supplyID);
        initComponents();
        fillFields(deviceHashMap);
    }

    public void fillFields(HashMap<String, String> deviceHashMap){
        setTypeOfDevice(deviceHashMap.get("deviceType"));
        warrantyFld.setText(deviceHashMap.get("warrantyInformation"));
        barcodeFld.setText(deviceHashMap.get("barcode"));
        modelFld.setText(deviceHashMap.get("model"));
        SNFld.setText(deviceHashMap.get("SN"));
        dateFld.setText(deviceHashMap.get("dateAcquired"));
        costFld.setText(deviceHashMap.get("cost"));
        conditionFld.setText(deviceHashMap.get("condition"));
        issuesFld.setText(deviceHashMap.get("issues"));
        statusFld.setText(deviceHashMap.get("status"));
        passwordFld.setText(deviceHashMap.get("password"));
        setHasKeyboard(deviceHashMap.get("hasKeyboard"));
        setHasMouse(deviceHashMap.get("hasMouse"));
        weightFld.setText(deviceHashMap.get("weight"));
    }

    public void setHasKeyboard(String hasKeyboard){
        if(hasKeyboard.equals("Yes")){
            hasKeyboardRBtn.setSelected(true);
        }
        else{
            hasKeyboardRBtn.setSelected(false);
        }
    }

    public void setHasMouse(String hasMouse){
        if(hasMouse.equals("Yes")){
            hasMouseRBtn.setSelected(true);
        }
        else{
            hasMouseRBtn.setSelected(false);
        }
    }

    public void setTypeOfDevice(String type){
        if(type == "IPAD"){
            iPadRBtn.setSelected(true);
        }
        else if(type == "PC"){
            PCRBtn.setSelected(true);
        }
        else{
            CBRBtn.setSelected(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        iPadRBtn = new javax.swing.JRadioButton();
        PCRBtn = new javax.swing.JRadioButton();
        CBRBtn = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        warrantyFld = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        barcodeFld = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        modelFld = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        SNFld = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        dateFld = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        costFld = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        conditionFld = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        issuesFld = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        statusFld = new javax.swing.JTextField();
        updateBtn = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        passwordFld = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        hasKeyboardRBtn = new javax.swing.JRadioButton();
        notHasKeyboardRBtn = new javax.swing.JRadioButton();
        jLabel14 = new javax.swing.JLabel();
        hasMouseRBtn = new javax.swing.JRadioButton();
        notHasMouseRBtn = new javax.swing.JRadioButton();
        jLabel15 = new javax.swing.JLabel();
        weightFld = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("View/Update Supply");

        buttonGroup1.add(iPadRBtn);
        iPadRBtn.setText("iPad");

        buttonGroup1.add(PCRBtn);
        PCRBtn.setText("PC");

        buttonGroup1.add(CBRBtn);
        CBRBtn.setText("Chromebook");

        jLabel2.setText("Type of Device:");

        jLabel3.setText("Warranty Expires On:");

        jLabel4.setText("Barcode");

        jLabel5.setText("Model");

        jLabel6.setText("Serial Number");

        jLabel7.setText("Date Acquired");

        jLabel8.setText("Cost");

        jLabel9.setText("Condition");

        jLabel10.setText("Known Issues");

        jLabel11.setText("Status");

        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        jLabel12.setText("Password");

        jLabel13.setText("Has Keyboard(Visible based on Device):");

        buttonGroup2.add(hasKeyboardRBtn);
        hasKeyboardRBtn.setText("True");

        buttonGroup2.add(notHasKeyboardRBtn);
        notHasKeyboardRBtn.setText("False");

        jLabel14.setText("Has Mouse(Visible based on Device):");

        buttonGroup3.add(hasMouseRBtn);
        hasMouseRBtn.setText("True");

        buttonGroup3.add(notHasMouseRBtn);
        notHasMouseRBtn.setText("False");

        jLabel15.setText("Weight(Visible based on Device):");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(141, 141, 141))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(228, 228, 228)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel15))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(iPadRBtn)
                                        .addGap(27, 27, 27)
                                        .addComponent(PCRBtn)
                                        .addGap(26, 26, 26)
                                        .addComponent(CBRBtn))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(hasMouseRBtn)
                                            .addGap(18, 18, 18)
                                            .addComponent(notHasMouseRBtn))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(hasKeyboardRBtn)
                                            .addGap(18, 18, 18)
                                            .addComponent(notHasKeyboardRBtn)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(weightFld, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                                        .addComponent(passwordFld, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(statusFld, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(issuesFld, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(conditionFld, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(costFld, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(dateFld, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(SNFld, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(modelFld, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(barcodeFld, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(warrantyFld, javax.swing.GroupLayout.Alignment.LEADING))))
                            .addComponent(jLabel14)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(283, 283, 283)
                        .addComponent(updateBtn)))
                .addContainerGap(97, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(iPadRBtn)
                    .addComponent(PCRBtn)
                    .addComponent(CBRBtn)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(warrantyFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(barcodeFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(modelFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(SNFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(dateFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(costFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(conditionFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(issuesFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(statusFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(passwordFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(hasKeyboardRBtn)
                        .addComponent(notHasKeyboardRBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(notHasMouseRBtn)
                    .addComponent(hasMouseRBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(weightFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 215, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(updateBtn)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
        String warranty = warrantyFld.getText();
        String barcode = barcodeFld.getText();
        String model = modelFld.getText();
        String serialNumber = SNFld.getText();
        String date = dateFld.getText();
        String cost = costFld.getText();
        String condition = conditionFld.getText();
        String issues = issuesFld.getText();
        String status = statusFld.getText();
        String password = passwordFld.getText();
        String hasKeyboard = "";
        String hasMouse = "";
        String weight = weightFld.getText();
        
        if(hasKeyboardRBtn.isSelected()){
            hasKeyboard = "Yes";
        }else{
            hasKeyboard = "No";
        }
        
        if(hasMouseRBtn.isSelected()){
            hasMouse = "Yes";
        }else{
            hasMouse = "No";
        }
        HashMap<String,String> data = new HashMap<String,String>();
        data.put("warranty", warranty);
        data.put("barcode", barcode);
        data.put("model", model);
        data.put("SN", serialNumber);
        data.put("dateAcquired", date);
        data.put("cost", cost);
        data.put("condition", condition);
        data.put("issues", issues);
        data.put("status", status);
        data.put("password", password);
        data.put("hasKeyboard", hasKeyboard);
        data.put("hasMouse", hasMouse);
        data.put("weight", weight);
        backend.updateDeviceInformation(supplyID, data);
        this.setVisible(false);
    }//GEN-LAST:event_updateBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(supply.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(supply.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(supply.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(supply.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new supply().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton CBRBtn;
    private javax.swing.JRadioButton PCRBtn;
    private javax.swing.JTextField SNFld;
    private javax.swing.JTextField barcodeFld;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JTextField conditionFld;
    private javax.swing.JTextField costFld;
    private javax.swing.JTextField dateFld;
    private javax.swing.JRadioButton hasKeyboardRBtn;
    private javax.swing.JRadioButton hasMouseRBtn;
    private javax.swing.JRadioButton iPadRBtn;
    private javax.swing.JTextField issuesFld;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField modelFld;
    private javax.swing.JRadioButton notHasKeyboardRBtn;
    private javax.swing.JRadioButton notHasMouseRBtn;
    private javax.swing.JTextField passwordFld;
    private javax.swing.JTextField statusFld;
    private javax.swing.JButton updateBtn;
    private javax.swing.JTextField warrantyFld;
    private javax.swing.JTextField weightFld;
    // End of variables declaration//GEN-END:variables
}
